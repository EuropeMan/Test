#ifndef VALVE_ENUMS
#define VALVE_ENUMS

enum e_buttons
{
    in_none = 0,
    in_all = -1,
    in_attack = 1,
    in_jump = 2,
    in_duck = 4,
    in_forward = 8,
    in_back = 16,
    in_use = 32,
    in_turnleft = 128,
    in_turnright = 256,
    in_moveleft = 512,
    in_moveright = 1024,
    in_attack2 = 2048,
    in_reload = 8192,
    in_speed = 65536,
    in_joyautosprint = 131072,
    in_first_mod_specific_bit = 4294967296,
    in_useorreload = 4294967296,
    in_score = 8589934592,
    in_zoom = 17179869184,
    in_jump_throw_release = 34359738368,
};

enum e_life_state_t
{
    life_alive = 0,
    life_dying = 1,
    life_dead = 2,
    life_respawnable = 3,
    life_respawning = 4,
};

enum e_flags
{
    fl_on_ground = 1 << 0,
    fl_ducking = 1 << 1,
    fl_anim_ducking = 1 << 2,
    fl_water_jump = 1 << 3,
    fl_on_train = 1 << 4,
    fl_in_rain = 1 << 5,
    fl_frozen = 1 << 6,
    fl_at_controls = 1 << 7,
    fl_client = 1 << 8,
    fl_fake_client = 1 << 9,
    fl_in_water = 1 << 10,
    fl_fly = 1 << 11,
    fl_swim = 1 << 12,
    fl_conveyor = 1 << 13,
    fl_npc = 1 << 14,
    fl_god_mode = 1 << 15,
    fl_no_target = 1 << 16,
    fl_aim_target = 1 << 17,
    fl_partial_ground = 1 << 18,
    fl_static_prop = 1 << 19,
    fl_graphed = 1 << 20,
    fl_grenade = 1 << 21,
    fl_step_movement = 1 << 22,
    fl_dont_touch = 1 << 23,
    fl_base_velocity = 1 << 24,
    fl_world_brush = 1 << 25,
    fl_object = 1 << 26,
    fl_kill_me = 1 << 27,
    fl_on_fire = 1 << 28,
    fl_dissolving = 1 << 29,
    fl_trans_ragdoll = 1 << 30,
    fl_unblockable_by_player = 1 << 31
};

enum e_hitboxes
{
    hitbox_head = 6,
    hitbox_neck = 5,
    hitbox_spine = 4,
    hitbox_spine_2 = 2,
    hitbox_pelvis = 0,
    hitbox_left_upper_arm = 8,
    hitbox_left_lower_arm = 9,
    hitbox_left_hand = 10,
    hitbox_right_upper_arm = 13,
    hitbox_right_lower_arm = 14,
    hitbox_right_hand = 15,
    hitbox_left_upper_leg = 22,
    hitbox_left_lower_leg = 23,
    hitbox_left_ankle = 24,
    hitbox_right_upper_leg = 25,
    hitbox_right_lower_leg = 26,
    hitbox_right_ankle = 27,
};

enum e_hitgroups
{
    hitgroup_invalid = -1,
    hitgroup_generic = 0,
    hitgroup_head,
    hitgroup_chest,
    hitgroup_stomach,
    hitgroup_left_arm,
    hitgroup_right_arm,
    hitgroup_left_leg,
    hitgroup_right_leg,
    hitgroup_neck,
    hitgroup_unused,
    hitgroup_gear,
    hitgroup_special,
    hitgroup_count,
};

enum e_move_type : int
{
    movetype_none = 0,
    movetype_obsolete,
    movetype_walk,
    movetype_fly,
    movetype_flygravity,
    movetype_vphysics,
    movetype_push,
    movetype_noclip,
    movetype_observer,
    movetype_ladder,
    movetype_custom,
    movetype_last,
    movetype_max_bits = 5,
};

enum e_weapon_type : int
{
    weapon_type_knife = 0,
    weapon_type_pistol,
    weapon_type_submachinegun,
    weapon_type_rifle,
    weapon_type_shotgun,
    weapon_type_sniper_rifle,
    weapon_type_machinegun,
    weapon_type_c4,
    weapon_type_taser,
    weapon_type_grenade,
    weapon_type_equipment,
    weapon_type_stackableitem,
    weapon_type_fists,
    weapon_type_breachcharge,
    weapon_type_bumpmine,
    weapon_type_tablet,
    weapon_type_melee,
    weapon_type_shield,
    weapon_type_zone_repulsor,
    weapon_type_unknown,
};

enum e_frame_stage : int
{
    frame_undefined = -1,
    frame_start,
    frame_simulate_start,
    frame_net_update_start,
    frame_net_update_preprocess,
    frame_net_full_frame_update_on_remove,
    frame_net_update_post_data_update_start,
    frame_net_update_post_data_update_end,
    frame_net_update_end,
    frame_net_creation,
    frame_simulate_end,
};

enum e_item_definition_index : uint16_t
{
    weapon_none = 0,
    weapon_deagle,
    weapon_elite,
    weapon_fiveseven,
    weapon_glock,
    weapon_ak47 = 7,
    weapon_aug,
    weapon_awp,
    weapon_famas,
    weapon_g3sg1,
    weapon_galilar = 13,
    weapon_m249,
    weapon_m4a1 = 16,
    weapon_mac10,
    weapon_p90 = 19,
    weapon_mp5sd = 23,
    weapon_ump45,
    weapon_xm1014,
    weapon_bizon,
    weapon_mag7,
    weapon_negev,
    weapon_sawedoff,
    weapon_tec9,
    weapon_taser,
    weapon_hkp2000,
    weapon_mp7,
    weapon_mp9,
    weapon_nova,
    weapon_p250,
    weapon_shield,
    weapon_scar20,
    weapon_sg553,
    weapon_ssg08,
    weapon_knifegg,
    weapon_knife,
    weapon_flashbang,
    weapon_hegrenade,
    weapon_smokegrenade,
    weapon_molotov,
    weapon_decoy,
    weapon_incgrenade,
    weapon_c4,
    weapon_healthshot = 57,
    weapon_knife_t = 59,
    weapon_m4a1_silencer,
    weapon_usp_silencer,
    weapon_cz75a = 63,
    weapon_revolver,
    weapon_tagrenade = 68,
    weapon_fists,
    weapon_breachcharge,
    weapon_tablet = 72,
    weapon_melee = 74,
    weapon_axe,
    weapon_hammer,
    weapon_spanner = 78,
    weapon_knife_ghost = 80,
    weapon_firebomb,
    weapon_diversion,
    weapon_frag_grenade,
    weapon_snowball,
    weapon_bumpmine,
    weapon_knife_bayonet = 500,
    weapon_knife_css = 503,
    weapon_knife_flip = 505,
    weapon_knife_gut,
    weapon_knife_karambit,
    weapon_knife_m9_bayonet,
    weapon_knife_tactical,
    weapon_knife_falchion = 512,
    weapon_knife_survival_bowie = 514,
    weapon_knife_butterfly,
    weapon_knife_push,
    weapon_knife_cord,
    weapon_knife_canis,
    weapon_knife_ursus = 519,
    weapon_knife_gypsy_jackknife,
    weapon_knife_outdoor,
    weapon_knife_stiletto = 522,
    weapon_knife_widowmaker,
    weapon_knife_skeleton = 525,
    studded_brokenfang_gloves = 4725,
    glove_studded_bloodhound = 5027,
    glove_t_side,
    glove_ct_side,
    glove_sporty,
    glove_slick,
    glove_leather_wrap,
    glove_motorcycle,
    glove_specialist,
    glove_hydra,
};

enum e_econ_item_rarity
{
    ir_default,
    ir_common,
    ir_uncommon,
    ir_rare,
    ir_mythical,
    ir_legendary,
    ir_ancient,
    ir_immortal
};

enum e_econ_item_quality
{
    iq_undefined = -1,
    iq_normal,
    iq_genuine,
    iq_vintage,
    iq_unusual,
    iq_unique,
    iq_community,
    iq_developer,
    iq_selfmade,
    iq_customized,
    iq_strange,
    iq_completed,
    iq_haunted,
    iq_tournament,
    iq_favored
};

enum e_contents
{
    contents_empty = 0,
    contents_solid = 0x1,
    contents_window = 0x2,
    contents_aux = 0x4,
    contents_grate = 0x8,
    contents_slime = 0x10,
    contents_water = 0x20,
    contents_blocklos = 0x40,
    contents_opaque = 0x80,
    contents_testfogvolume = 0x100,
    contents_unused = 0x200,
    contents_blocklight = 0x400,
    contents_team1 = 0x800,
    contents_team2 = 0x1000,
    contents_ignore_nodraw_opaque = 0x2000,
    contents_moveable = 0x4000,
    contents_areaportal = 0x8000,
    contents_playerclip = 0x10000,
    contents_monsterclip = 0x20000,
    contents_current_0 = 0x40000,
    contents_current_90 = 0x80000,
    contents_current_180 = 0x100000,
    contents_current_270 = 0x200000,
    contents_current_up = 0x400000,
    contents_current_down = 0x800000,
    contents_origin = 0x1000000,
    contents_monster = 0x2000000,
    contents_debris = 0x4000000,
    contents_detail = 0x8000000,
    contents_translucent = 0x10000000,
    contents_ladder = 0x20000000,
    contents_hitbox = 0x40000000,
};

enum e_trace_masks
{
    mask_all = 0xffffffff,
    mask_solid = contents_solid | contents_moveable | contents_window | contents_monster | contents_grate,
    mask_playersolid = contents_solid | contents_moveable | contents_playerclip | contents_window | contents_monster | contents_grate,
    mask_npcsolid = contents_solid | contents_moveable | contents_monsterclip | contents_window | contents_monster | contents_grate,
    mask_npcfluid = contents_solid | contents_moveable | contents_monsterclip | contents_window | contents_monster | contents_grate,
    mask_water = contents_water | contents_moveable | contents_slime,
    mask_opaque = contents_solid | contents_moveable | contents_opaque,
    mask_opaque_and_npcs = mask_opaque | contents_monster,
    mask_blocklos = contents_solid | contents_moveable | contents_blocklos,
    mask_blocklos_and_npcs = mask_blocklos | contents_monster,
    mask_visible = mask_opaque | contents_ignore_nodraw_opaque,
    mask_visible_and_npcs = mask_opaque_and_npcs | contents_ignore_nodraw_opaque,
    mask_shot = contents_solid | contents_moveable | contents_monster | contents_window | contents_debris | contents_grate | contents_hitbox,
    mask_shot_brushonly = contents_solid | contents_moveable | contents_window | contents_debris,
    mask_shot_hull = contents_solid | contents_moveable | contents_monster | contents_window | contents_debris | contents_grate,
    mask_shot_portal = contents_solid | contents_moveable | contents_window | contents_monster,
    mask_solid_brushonly = contents_solid | contents_moveable | contents_window | contents_grate,
    mask_playersolid_brushonly = contents_solid | contents_moveable | contents_window | contents_playerclip | contents_grate,
    mask_npcsolid_brushonly = contents_solid | contents_moveable | contents_window | contents_monsterclip | contents_grate,
    mask_npcworldstatic = contents_solid | contents_window | contents_monsterclip | contents_grate,
    mask_npcworldstatic_fluid = contents_solid | contents_window | contents_monsterclip,
    mask_splitareportal = contents_water | contents_slime,
    mask_current = contents_current_0 | contents_current_90 | contents_current_180 | contents_current_270 | contents_current_up | contents_current_down,
    mask_deadsolid = contents_solid | contents_playerclip | contents_window | contents_grate,
};

enum bone_flags : std::uint32_t
{
    flag_no_bone_flags = 0x0,
    flag_boneflexdriver = 0x4,
    flag_cloth = 0x8,
    flag_physics = 0x10,
    flag_attachment = 0x20,
    flag_animation = 0x40,
    flag_mesh = 0x80,
    flag_hitbox = 0x100,
    flag_bone_used_by_vertex_lod0 = 0x400,
    flag_bone_used_by_vertex_lod1 = 0x800,
    flag_bone_used_by_vertex_lod2 = 0x1000,
    flag_bone_used_by_vertex_lod3 = 0x2000,
    flag_bone_used_by_vertex_lod4 = 0x4000,
    flag_bone_used_by_vertex_lod5 = 0x8000,
    flag_bone_used_by_vertex_lod6 = 0x10000,
    flag_bone_used_by_vertex_lod7 = 0x20000,
    flag_bone_merge_read = 0x40000,
    flag_bone_merge_write = 0x80000,
    flag_all_bone_flags = 0xfffff,
    blend_prealigned = 0x100000,
    flag_rigidlength = 0x200000,
    flag_procedural = 0x400000,
};

#endif